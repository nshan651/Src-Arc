#define DEFINE_FUNC_ATTRIBUTES
#include "nvim/func_attr.h"
#undef DEFINE_FUNC_ATTRIBUTES
static void save_dbg_stuff(struct dbg_stuff *dsp);
static void restore_dbg_stuff(struct dbg_stuff *dsp);
static void msg_verbose_cmd(linenr_T lnum, char *cmd) FUNC_ATTR_NONNULL_ALL;
static char *get_loop_line(int c, void *cookie, int indent, _Bool do_concat);
static void store_loop_line(garray_T *gap, char *line);
static int compute_buffer_local_count(cmd_addr_T addr_type, linenr_T lnum, long offset);
static int current_win_nr(const win_T *win) FUNC_ATTR_PURE FUNC_ATTR_WARN_UNUSED_RESULT;
static int current_tab_nr(tabpage_T *tab);
static void get_wincmd_addr_type(const char *arg, exarg_T *eap);
static char *skip_colon_white(const char *p, _Bool skipleadingwhite);
static void parse_register(exarg_T *eap);
static int parse_count(exarg_T *eap, char **errormsg, _Bool validate);
static void shift_cmd_args(exarg_T *eap);
static int execute_cmd0(int *retv, exarg_T *eap, char **errormsg, _Bool preview);
static void profile_cmd(const exarg_T *eap, cstack_T *cstack, LineGetter fgetline, void *cookie);
static _Bool skip_cmd(const exarg_T *eap);
static char *do_one_cmd(char **cmdlinep, int flags, cstack_T *cstack, LineGetter fgetline, void *cookie);
static void apply_cmdmod(cmdmod_T *cmod);
static void append_command(char *cmd);
static int one_letter_cmd(const char *p, cmdidx_T *idx);
static void addr_error(cmd_addr_T addr_type);
static linenr_T get_address(exarg_T *eap, char **ptr, cmd_addr_T addr_type, int skip, _Bool silent, int to_other_file, int address_count) FUNC_ATTR_NONNULL_ALL;
static void get_flags(exarg_T *eap);
static void ex_script_ni(exarg_T *eap);
static void correct_range(exarg_T *eap);
static char *skip_grep_pat(exarg_T *eap);
static char *repl_cmdline(exarg_T *eap, char *src, size_t srclen, char *repl, char **cmdlinep);
static char *getargcmd(char **argp);
static int getargopt(exarg_T *eap);
static int get_tabpage_arg(exarg_T *eap);
static void ex_autocmd(exarg_T *eap);
static void ex_doautocmd(exarg_T *eap);
static void ex_bunload(exarg_T *eap);
static void ex_buffer(exarg_T *eap);
static void ex_bmodified(exarg_T *eap);
static void ex_bnext(exarg_T *eap);
static void ex_bprevious(exarg_T *eap);
static void ex_brewind(exarg_T *eap);
static void ex_blast(exarg_T *eap);
static int check_more(int message, _Bool forceit);
static void ex_colorscheme(exarg_T *eap);
static void ex_highlight(exarg_T *eap);
static void ex_quit(exarg_T *eap);
static void ex_cquit(exarg_T *eap) FUNC_ATTR_NORETURN;
static void ex_quit_all(exarg_T *eap);
static void ex_close(exarg_T *eap);
static void ex_pclose(exarg_T *eap);
static void ex_tabclose(exarg_T *eap);
static void ex_tabonly(exarg_T *eap);
static void ex_only(exarg_T *eap);
static void ex_hide(exarg_T *eap);
static void ex_stop(exarg_T *eap);
static void ex_exit(exarg_T *eap);
static void ex_print(exarg_T *eap);
static void ex_goto(exarg_T *eap);
static void ex_preserve(exarg_T *eap);
static void ex_recover(exarg_T *eap);
static void ex_wrongmodifier(exarg_T *eap);
static void ex_tabnext(exarg_T *eap);
static void ex_tabmove(exarg_T *eap);
static void ex_tabs(exarg_T *eap);
static void ex_mode(exarg_T *eap);
static void ex_resize(exarg_T *eap);
static void ex_find(exarg_T *eap);
static void ex_edit(exarg_T *eap);
static void ex_nogui(exarg_T *eap);
static void ex_popup(exarg_T *eap);
static void ex_swapname(exarg_T *eap);
static void ex_syncbind(exarg_T *eap);
static void ex_read(exarg_T *eap);
static char *get_prevdir(CdScope scope);
static void post_chdir(CdScope scope, _Bool trigger_dirchanged);
static void ex_pwd(exarg_T *eap);
static void ex_equal(exarg_T *eap);
static void ex_sleep(exarg_T *eap);
static void ex_winsize(exarg_T *eap);
static void ex_wincmd(exarg_T *eap);
static void ex_operators(exarg_T *eap);
static void ex_put(exarg_T *eap);
static void ex_copymove(exarg_T *eap);
static void ex_submagic(exarg_T *eap);
static int ex_submagic_preview(exarg_T *eap, long cmdpreview_ns, handle_T cmdpreview_bufnr);
static void ex_join(exarg_T *eap);
static void ex_at(exarg_T *eap);
static void ex_bang(exarg_T *eap);
static void ex_undo(exarg_T *eap);
static void ex_wundo(exarg_T *eap);
static void ex_rundo(exarg_T *eap);
static void ex_redo(exarg_T *eap);
static void ex_later(exarg_T *eap);
static void ex_redir(exarg_T *eap);
static void ex_redraw(exarg_T *eap);
static void ex_redrawstatus(exarg_T *eap);
static void ex_redrawtabline(exarg_T *eap FUNC_ATTR_UNUSED);
static void close_redir(void);
static void ex_mark(exarg_T *eap);
static void ex_normal(exarg_T *eap);
static void ex_startinsert(exarg_T *eap);
static void ex_stopinsert(exarg_T *eap);
static void ex_checkpath(exarg_T *eap);
static void ex_psearch(exarg_T *eap);
static void ex_findpat(exarg_T *eap);
static void ex_ptag(exarg_T *eap);
static void ex_pedit(exarg_T *eap);
static void ex_stag(exarg_T *eap);
static void ex_tag(exarg_T *eap);
static void ex_tag_cmd(exarg_T *eap, const char *name);
static void ex_shada(exarg_T *eap);
static void ex_behave(exarg_T *eap);
static void ex_filetype(exarg_T *eap);
static void ex_setfiletype(exarg_T *eap);
static void ex_digraphs(exarg_T *eap);
static void ex_nohlsearch(exarg_T *eap);
static void ex_fold(exarg_T *eap);
static void ex_foldopen(exarg_T *eap);
static void ex_folddo(exarg_T *eap);
static void ex_terminal(exarg_T *eap);
#include "nvim/func_attr.h"
