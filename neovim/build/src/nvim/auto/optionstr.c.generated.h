#define DEFINE_FUNC_ATTRIBUTES
#include "nvim/func_attr.h"
#undef DEFINE_FUNC_ATTRIBUTES
static char *illegal_char(char *errbuf, size_t errbuflen, int c);
static void set_string_option_global(vimoption_T *opt, char **varp);
static _Bool valid_filetype(const char *val) FUNC_ATTR_NONNULL_ALL FUNC_ATTR_PURE FUNC_ATTR_WARN_UNUSED_RESULT;
static const char *check_mousescroll(char *string);
static int check_signcolumn(char *val);
static _Bool check_illegal_path_names(char *val, uint32_t flags);
static void did_set_backupcopy(buf_T *buf, char *oldval, int opt_flags, const char **errmsg);
static void did_set_backupext_or_patchmode(const char **errmsg);
static void did_set_breakindentopt(win_T *win, const char **errmsg);
static void did_set_isopt(buf_T *buf, _Bool *did_chartab, const char **errmsg);
static void did_set_helpfile(void);
static void did_set_cursorlineopt(win_T *win, char **varp, const char **errmsg);
static void did_set_helplang(const char **errmsg);
static void did_set_highlight(char **varp, const char **errmsg);
static void did_set_opt_flags(char *val, char **values, unsigned *flagp, _Bool list, const char **errmsg);
static void did_set_opt_strings(char *val, char **values, _Bool list, const char **errmsg);
static void did_set_sessionoptions(char *oldval, const char **errmsg);
static void did_set_ambiwidth(const char **errmsg);
static void did_set_background(const char **errmsg);
static void did_set_wildmode(const char **errmsg);
static void did_set_winaltkeys(const char **errmsg);
static void did_set_eventignore(const char **errmsg);
static void did_set_encoding(buf_T *buf, char **varp, char **gvarp, int opt_flags, const char **errmsg);
static void did_set_keymap(buf_T *buf, char **varp, int opt_flags, int *value_checked, const char **errmsg);
static void did_set_fileformat(buf_T *buf, char **varp, const char *oldval, int opt_flags, const char **errmsg);
static void did_set_matchpairs(char **varp, const char **errmsg);
static void did_set_comments(char **varp, char *errbuf, size_t errbuflen, const char **errmsg);
static void did_set_global_listfillchars(win_T *win, char **varp, int opt_flags, const char **errmsg);
static void did_set_verbosefile(const char **errmsg);
static void did_set_shada(vimoption_T **opt, int *opt_idx, _Bool *free_oldval, char *errbuf, size_t errbuflen, const char **errmsg);
static void did_set_showbreak(char **varp, const char **errmsg);
static void did_set_titleiconstring(char **varp);
static void did_set_selection(const char **errmsg);
static void did_set_keymodel(const char **errmsg);
static void did_set_display(const char **errmsg);
static void did_set_spellfile(char **varp, const char **errmsg);
static void did_set_spell(char **varp, const char **errmsg);
static void did_set_spellcapcheck(win_T *win, const char **errmsg);
static void did_set_spelloptions(win_T *win, const char **errmsg);
static void did_set_spellsuggest(const char **errmsg);
static void did_set_mkspellmem(const char **errmsg);
static void did_set_buftype(buf_T *buf, win_T *win, const char **errmsg);
static void did_set_statusline(win_T *win, char **varp, char **gvarp, const char **errmsg);
static void did_set_complete(char **varp, char *errbuf, size_t errbuflen, const char **errmsg);
static void did_set_completeopt(const char **errmsg);
static void did_set_signcolumn(win_T *win, char **varp, const char *oldval, const char **errmsg);
static void did_set_foldcolumn(char **varp, const char **errmsg);
static void did_set_backspace(const char **errmsg);
static void did_set_tagcase(buf_T *buf, int opt_flags, const char **errmsg);
static void did_set_diffopt(const char **errmsg);
static void did_set_foldmethod(win_T *win, char **varp, const char **errmsg);
static void did_set_foldmarker(win_T *win, char **varp, const char **errmsg);
static void did_set_commentstring(char **varp, const char **errmsg);
static void did_set_foldignore(win_T *win);
static void did_set_virtualedit(win_T *win, int opt_flags, char *oldval, const char **errmsg);
static void did_set_lispoptions(char **varp, const char **errmsg);
static void did_set_filetype_or_syntax(char **varp, char *oldval, int *value_checked, _Bool *value_changed, const char **errmsg);
static void did_set_winhl(win_T *win, const char **errmsg);
static void did_set_varsoftabstop(buf_T *buf, char **varp, const char **errmsg);
static void did_set_vartabstop(buf_T *buf, win_T *win, char **varp, const char **errmsg);
static void did_set_optexpr(char **varp);
static void did_set_option_listflag(char **varp, char *flags, char *errbuf, size_t errbuflen, const char **errmsg);
static void do_syntax_autocmd(buf_T *buf, _Bool value_changed);
static void do_spelllang_source(win_T *win);
static const char *did_set_string_option_for(buf_T *buf, win_T *win, int opt_idx, char **varp, char *oldval, char *errbuf, size_t errbuflen, int opt_flags, int *value_checked);
static int check_opt_strings(char *val, char **values, int list);
static int opt_strings_flags(char *val, char **values, unsigned *flagp, _Bool list);
static int get_encoded_char_adv(const char **p);
#include "nvim/func_attr.h"
